# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'doublecommander.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1396, 629)
        MainWindow.setMinimumSize(QtCore.QSize(640, 480))
        MainWindow.setBaseSize(QtCore.QSize(800, 600))
        MainWindow.setDocumentMode(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setMouseTracking(True)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayoutLeftButtonBar = QtWidgets.QHBoxLayout()
        self.horizontalLayoutLeftButtonBar.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayoutLeftButtonBar.setContentsMargins(-1, -1, -1, 0)
        self.horizontalLayoutLeftButtonBar.setSpacing(7)
        self.horizontalLayoutLeftButtonBar.setObjectName("horizontalLayoutLeftButtonBar")
        self.pushButtonLeftDrive1 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonLeftDrive1.sizePolicy().hasHeightForWidth())
        self.pushButtonLeftDrive1.setSizePolicy(sizePolicy)
        self.pushButtonLeftDrive1.setMinimumSize(QtCore.QSize(48, 32))
        self.pushButtonLeftDrive1.setMaximumSize(QtCore.QSize(48, 32))
        self.pushButtonLeftDrive1.setBaseSize(QtCore.QSize(48, 32))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/devices/drive-harddisk.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonLeftDrive1.setIcon(icon)
        self.pushButtonLeftDrive1.setIconSize(QtCore.QSize(16, 16))
        self.pushButtonLeftDrive1.setFlat(True)
        self.pushButtonLeftDrive1.setObjectName("pushButtonLeftDrive1")
        self.horizontalLayoutLeftButtonBar.addWidget(self.pushButtonLeftDrive1)
        self.pushButtonLeftVFS = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonLeftVFS.sizePolicy().hasHeightForWidth())
        self.pushButtonLeftVFS.setSizePolicy(sizePolicy)
        self.pushButtonLeftVFS.setMinimumSize(QtCore.QSize(48, 32))
        self.pushButtonLeftVFS.setMaximumSize(QtCore.QSize(48, 32))
        self.pushButtonLeftVFS.setBaseSize(QtCore.QSize(48, 32))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/devices/drive-virtual.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonLeftVFS.setIcon(icon1)
        self.pushButtonLeftVFS.setIconSize(QtCore.QSize(16, 16))
        self.pushButtonLeftVFS.setFlat(True)
        self.pushButtonLeftVFS.setObjectName("pushButtonLeftVFS")
        self.horizontalLayoutLeftButtonBar.addWidget(self.pushButtonLeftVFS)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayoutLeftButtonBar.addItem(spacerItem)
        self.gridLayout.addLayout(self.horizontalLayoutLeftButtonBar, 0, 0, 1, 1)
        self.horizontalLayoutRightButtonBar = QtWidgets.QHBoxLayout()
        self.horizontalLayoutRightButtonBar.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayoutRightButtonBar.setObjectName("horizontalLayoutRightButtonBar")
        self.pushButtonRightDrive1 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonRightDrive1.sizePolicy().hasHeightForWidth())
        self.pushButtonRightDrive1.setSizePolicy(sizePolicy)
        self.pushButtonRightDrive1.setMinimumSize(QtCore.QSize(48, 32))
        self.pushButtonRightDrive1.setMaximumSize(QtCore.QSize(48, 32))
        self.pushButtonRightDrive1.setBaseSize(QtCore.QSize(48, 32))
        self.pushButtonRightDrive1.setIcon(icon)
        self.pushButtonRightDrive1.setIconSize(QtCore.QSize(16, 16))
        self.pushButtonRightDrive1.setFlat(True)
        self.pushButtonRightDrive1.setObjectName("pushButtonRightDrive1")
        self.horizontalLayoutRightButtonBar.addWidget(self.pushButtonRightDrive1)
        self.pushButtonRightVFS = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonRightVFS.sizePolicy().hasHeightForWidth())
        self.pushButtonRightVFS.setSizePolicy(sizePolicy)
        self.pushButtonRightVFS.setMinimumSize(QtCore.QSize(48, 0))
        self.pushButtonRightVFS.setMaximumSize(QtCore.QSize(48, 32))
        self.pushButtonRightVFS.setBaseSize(QtCore.QSize(48, 32))
        self.pushButtonRightVFS.setIcon(icon1)
        self.pushButtonRightVFS.setIconSize(QtCore.QSize(16, 16))
        self.pushButtonRightVFS.setFlat(True)
        self.pushButtonRightVFS.setObjectName("pushButtonRightVFS")
        self.horizontalLayoutRightButtonBar.addWidget(self.pushButtonRightVFS)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayoutRightButtonBar.addItem(spacerItem1)
        self.gridLayout.addLayout(self.horizontalLayoutRightButtonBar, 0, 1, 1, 1)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 1, 0, 1, 2)
        self.horizontalLayoutLeftDrivesList = QtWidgets.QHBoxLayout()
        self.horizontalLayoutLeftDrivesList.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayoutLeftDrivesList.setContentsMargins(-1, -1, -1, 0)
        self.horizontalLayoutLeftDrivesList.setSpacing(7)
        self.horizontalLayoutLeftDrivesList.setObjectName("horizontalLayoutLeftDrivesList")
        self.comboBoxLeftDrives = QtWidgets.QComboBox(self.centralwidget)
        self.comboBoxLeftDrives.setObjectName("comboBoxLeftDrives")
        self.comboBoxLeftDrives.addItem(icon, "")
        self.comboBoxLeftDrives.addItem(icon1, "")
        self.horizontalLayoutLeftDrivesList.addWidget(self.comboBoxLeftDrives)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayoutLeftDrivesList.addItem(spacerItem2)
        self.labelLeftDiskVolumeSize = QtWidgets.QLabel(self.centralwidget)
        self.labelLeftDiskVolumeSize.setObjectName("labelLeftDiskVolumeSize")
        self.horizontalLayoutLeftDrivesList.addWidget(self.labelLeftDiskVolumeSize)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayoutLeftDrivesList.addItem(spacerItem3)
        self.pushButtonLeftDirectoryHotlist = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonLeftDirectoryHotlist.sizePolicy().hasHeightForWidth())
        self.pushButtonLeftDirectoryHotlist.setSizePolicy(sizePolicy)
        self.pushButtonLeftDirectoryHotlist.setMinimumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftDirectoryHotlist.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftDirectoryHotlist.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonLeftDirectoryHotlist.setFlat(True)
        self.pushButtonLeftDirectoryHotlist.setObjectName("pushButtonLeftDirectoryHotlist")
        self.horizontalLayoutLeftDrivesList.addWidget(self.pushButtonLeftDirectoryHotlist)
        self.pushButtonLeftGotoRootDirectory = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonLeftGotoRootDirectory.sizePolicy().hasHeightForWidth())
        self.pushButtonLeftGotoRootDirectory.setSizePolicy(sizePolicy)
        self.pushButtonLeftGotoRootDirectory.setMinimumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftGotoRootDirectory.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftGotoRootDirectory.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonLeftGotoRootDirectory.setFlat(True)
        self.pushButtonLeftGotoRootDirectory.setObjectName("pushButtonLeftGotoRootDirectory")
        self.horizontalLayoutLeftDrivesList.addWidget(self.pushButtonLeftGotoRootDirectory)
        self.pushButtonLeftGotoParentDirectory = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonLeftGotoParentDirectory.sizePolicy().hasHeightForWidth())
        self.pushButtonLeftGotoParentDirectory.setSizePolicy(sizePolicy)
        self.pushButtonLeftGotoParentDirectory.setMinimumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftGotoParentDirectory.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftGotoParentDirectory.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonLeftGotoParentDirectory.setFlat(True)
        self.pushButtonLeftGotoParentDirectory.setObjectName("pushButtonLeftGotoParentDirectory")
        self.horizontalLayoutLeftDrivesList.addWidget(self.pushButtonLeftGotoParentDirectory)
        self.pushButtonLeftGotoHomeDirectory = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonLeftGotoHomeDirectory.sizePolicy().hasHeightForWidth())
        self.pushButtonLeftGotoHomeDirectory.setSizePolicy(sizePolicy)
        self.pushButtonLeftGotoHomeDirectory.setMinimumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftGotoHomeDirectory.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftGotoHomeDirectory.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonLeftGotoHomeDirectory.setFlat(True)
        self.pushButtonLeftGotoHomeDirectory.setObjectName("pushButtonLeftGotoHomeDirectory")
        self.horizontalLayoutLeftDrivesList.addWidget(self.pushButtonLeftGotoHomeDirectory)
        self.pushButtonLeftRightLeftPanel = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonLeftRightLeftPanel.sizePolicy().hasHeightForWidth())
        self.pushButtonLeftRightLeftPanel.setSizePolicy(sizePolicy)
        self.pushButtonLeftRightLeftPanel.setMinimumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftRightLeftPanel.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonLeftRightLeftPanel.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonLeftRightLeftPanel.setFlat(True)
        self.pushButtonLeftRightLeftPanel.setObjectName("pushButtonLeftRightLeftPanel")
        self.horizontalLayoutLeftDrivesList.addWidget(self.pushButtonLeftRightLeftPanel)
        self.gridLayout.addLayout(self.horizontalLayoutLeftDrivesList, 2, 0, 1, 1)
        self.horizontalLayoutRightDrivesList = QtWidgets.QHBoxLayout()
        self.horizontalLayoutRightDrivesList.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayoutRightDrivesList.setObjectName("horizontalLayoutRightDrivesList")
        self.comboBoxRightDrives = QtWidgets.QComboBox(self.centralwidget)
        self.comboBoxRightDrives.setObjectName("comboBoxRightDrives")
        self.comboBoxRightDrives.addItem(icon, "")
        self.comboBoxRightDrives.addItem(icon1, "")
        self.horizontalLayoutRightDrivesList.addWidget(self.comboBoxRightDrives)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayoutRightDrivesList.addItem(spacerItem4)
        self.labelRightDiskVolumeSize = QtWidgets.QLabel(self.centralwidget)
        self.labelRightDiskVolumeSize.setObjectName("labelRightDiskVolumeSize")
        self.horizontalLayoutRightDrivesList.addWidget(self.labelRightDiskVolumeSize)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayoutRightDrivesList.addItem(spacerItem5)
        self.pushButtonRightDirectoryHotlist = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonRightDirectoryHotlist.sizePolicy().hasHeightForWidth())
        self.pushButtonRightDirectoryHotlist.setSizePolicy(sizePolicy)
        self.pushButtonRightDirectoryHotlist.setMinimumSize(QtCore.QSize(2, 2))
        self.pushButtonRightDirectoryHotlist.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonRightDirectoryHotlist.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonRightDirectoryHotlist.setFlat(True)
        self.pushButtonRightDirectoryHotlist.setObjectName("pushButtonRightDirectoryHotlist")
        self.horizontalLayoutRightDrivesList.addWidget(self.pushButtonRightDirectoryHotlist)
        self.pushButtonRightGotoRootDirectory = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonRightGotoRootDirectory.sizePolicy().hasHeightForWidth())
        self.pushButtonRightGotoRootDirectory.setSizePolicy(sizePolicy)
        self.pushButtonRightGotoRootDirectory.setMinimumSize(QtCore.QSize(32, 32))
        self.pushButtonRightGotoRootDirectory.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonRightGotoRootDirectory.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonRightGotoRootDirectory.setFlat(True)
        self.pushButtonRightGotoRootDirectory.setObjectName("pushButtonRightGotoRootDirectory")
        self.horizontalLayoutRightDrivesList.addWidget(self.pushButtonRightGotoRootDirectory)
        self.pushButtonRightGotoParentDirectory = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonRightGotoParentDirectory.sizePolicy().hasHeightForWidth())
        self.pushButtonRightGotoParentDirectory.setSizePolicy(sizePolicy)
        self.pushButtonRightGotoParentDirectory.setMinimumSize(QtCore.QSize(32, 32))
        self.pushButtonRightGotoParentDirectory.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonRightGotoParentDirectory.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonRightGotoParentDirectory.setFlat(True)
        self.pushButtonRightGotoParentDirectory.setObjectName("pushButtonRightGotoParentDirectory")
        self.horizontalLayoutRightDrivesList.addWidget(self.pushButtonRightGotoParentDirectory)
        self.pushButtonRightGotoHomeDirectory = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonRightGotoHomeDirectory.sizePolicy().hasHeightForWidth())
        self.pushButtonRightGotoHomeDirectory.setSizePolicy(sizePolicy)
        self.pushButtonRightGotoHomeDirectory.setMinimumSize(QtCore.QSize(32, 32))
        self.pushButtonRightGotoHomeDirectory.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonRightGotoHomeDirectory.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonRightGotoHomeDirectory.setFlat(True)
        self.pushButtonRightGotoHomeDirectory.setObjectName("pushButtonRightGotoHomeDirectory")
        self.horizontalLayoutRightDrivesList.addWidget(self.pushButtonRightGotoHomeDirectory)
        self.pushButtonRightRightLeftPanel = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonRightRightLeftPanel.sizePolicy().hasHeightForWidth())
        self.pushButtonRightRightLeftPanel.setSizePolicy(sizePolicy)
        self.pushButtonRightRightLeftPanel.setMinimumSize(QtCore.QSize(32, 32))
        self.pushButtonRightRightLeftPanel.setMaximumSize(QtCore.QSize(32, 32))
        self.pushButtonRightRightLeftPanel.setBaseSize(QtCore.QSize(32, 32))
        self.pushButtonRightRightLeftPanel.setFlat(True)
        self.pushButtonRightRightLeftPanel.setObjectName("pushButtonRightRightLeftPanel")
        self.horizontalLayoutRightDrivesList.addWidget(self.pushButtonRightRightLeftPanel)
        self.gridLayout.addLayout(self.horizontalLayoutRightDrivesList, 2, 1, 1, 1)
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.tabWidgetLeftPanel = QtWidgets.QTabWidget(self.splitter)
        self.tabWidgetLeftPanel.setMouseTracking(True)
        self.tabWidgetLeftPanel.setAcceptDrops(True)
        self.tabWidgetLeftPanel.setTabsClosable(True)
        self.tabWidgetLeftPanel.setMovable(True)
        self.tabWidgetLeftPanel.setObjectName("tabWidgetLeftPanel")
        self.tabLeft1 = QtWidgets.QWidget()
        self.tabLeft1.setObjectName("tabLeft1")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tabLeft1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.labelLeftTabCurrentDirectoryBar1 = QtWidgets.QLabel(self.tabLeft1)
        self.labelLeftTabCurrentDirectoryBar1.setObjectName("labelLeftTabCurrentDirectoryBar1")
        self.verticalLayout.addWidget(self.labelLeftTabCurrentDirectoryBar1)
        self.treeWidgetLeftFilePanel1 = QtWidgets.QTreeWidget(self.tabLeft1)
        self.treeWidgetLeftFilePanel1.setMouseTracking(True)
        self.treeWidgetLeftFilePanel1.setObjectName("treeWidgetLeftFilePanel1")
        self.treeWidgetLeftFilePanel1.headerItem().setText(0, "Name")
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidgetLeftFilePanel1)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/24x24/actions/go-up.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item_0.setIcon(0, icon2)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidgetLeftFilePanel1)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/24x24/places/folder.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item_0.setIcon(0, icon3)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/24x24/mimetypes/application-pdf.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item_1.setIcon(0, icon4)
        self.verticalLayout.addWidget(self.treeWidgetLeftFilePanel1)
        self.labelLeftFileStatusBar1 = QtWidgets.QLabel(self.tabLeft1)
        self.labelLeftFileStatusBar1.setObjectName("labelLeftFileStatusBar1")
        self.verticalLayout.addWidget(self.labelLeftFileStatusBar1)
        self.tabWidgetLeftPanel.addTab(self.tabLeft1, "")
        self.tabLeft2 = QtWidgets.QWidget()
        self.tabLeft2.setObjectName("tabLeft2")
        self.tabWidgetLeftPanel.addTab(self.tabLeft2, "")
        self.tabWidgetRightPanel = QtWidgets.QTabWidget(self.splitter)
        self.tabWidgetRightPanel.setMouseTracking(True)
        self.tabWidgetRightPanel.setAcceptDrops(True)
        self.tabWidgetRightPanel.setTabsClosable(True)
        self.tabWidgetRightPanel.setMovable(True)
        self.tabWidgetRightPanel.setObjectName("tabWidgetRightPanel")
        self.tabRight1 = QtWidgets.QWidget()
        self.tabRight1.setObjectName("tabRight1")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tabRight1)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.labelRightTabCurrentDirectoryBar1 = QtWidgets.QLabel(self.tabRight1)
        self.labelRightTabCurrentDirectoryBar1.setObjectName("labelRightTabCurrentDirectoryBar1")
        self.verticalLayout_2.addWidget(self.labelRightTabCurrentDirectoryBar1)
        self.treeWidgetRightFilePanel1 = QtWidgets.QTreeWidget(self.tabRight1)
        self.treeWidgetRightFilePanel1.setMouseTracking(True)
        self.treeWidgetRightFilePanel1.setObjectName("treeWidgetRightFilePanel1")
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidgetRightFilePanel1)
        item_0.setIcon(0, icon2)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidgetRightFilePanel1)
        item_0.setIcon(0, icon3)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setIcon(0, icon4)
        self.verticalLayout_2.addWidget(self.treeWidgetRightFilePanel1)
        self.labelRightFileStatusBar1 = QtWidgets.QLabel(self.tabRight1)
        self.labelRightFileStatusBar1.setObjectName("labelRightFileStatusBar1")
        self.verticalLayout_2.addWidget(self.labelRightFileStatusBar1)
        self.tabWidgetRightPanel.addTab(self.tabRight1, "")
        self.tabRight2 = QtWidgets.QWidget()
        self.tabRight2.setObjectName("tabRight2")
        self.tabWidgetRightPanel.addTab(self.tabRight2, "")
        self.gridLayout.addWidget(self.splitter, 3, 0, 1, 2)
        self.verticalLayoutBottomBars = QtWidgets.QVBoxLayout()
        self.verticalLayoutBottomBars.setObjectName("verticalLayoutBottomBars")
        self.horizontalLayoutCommandLine = QtWidgets.QHBoxLayout()
        self.horizontalLayoutCommandLine.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayoutCommandLine.setObjectName("horizontalLayoutCommandLine")
        self.labelPath = QtWidgets.QLabel(self.centralwidget)
        self.labelPath.setObjectName("labelPath")
        self.horizontalLayoutCommandLine.addWidget(self.labelPath)
        self.comboBoxPath = QtWidgets.QComboBox(self.centralwidget)
        self.comboBoxPath.setEditable(True)
        self.comboBoxPath.setObjectName("comboBoxPath")
        self.horizontalLayoutCommandLine.addWidget(self.comboBoxPath)
        self.verticalLayoutBottomBars.addLayout(self.horizontalLayoutCommandLine)
        self.horizontalLayoutFunctionKeyButtonBar = QtWidgets.QHBoxLayout()
        self.horizontalLayoutFunctionKeyButtonBar.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayoutFunctionKeyButtonBar.setObjectName("horizontalLayoutFunctionKeyButtonBar")
        self.pushButtonView = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonView.setFlat(True)
        self.pushButtonView.setObjectName("pushButtonView")
        self.horizontalLayoutFunctionKeyButtonBar.addWidget(self.pushButtonView)
        self.pushButtonEdit = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonEdit.setFlat(True)
        self.pushButtonEdit.setObjectName("pushButtonEdit")
        self.horizontalLayoutFunctionKeyButtonBar.addWidget(self.pushButtonEdit)
        self.pushButtonCopy = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonCopy.setFlat(True)
        self.pushButtonCopy.setObjectName("pushButtonCopy")
        self.horizontalLayoutFunctionKeyButtonBar.addWidget(self.pushButtonCopy)
        self.pushButtonMove = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonMove.setFlat(True)
        self.pushButtonMove.setObjectName("pushButtonMove")
        self.horizontalLayoutFunctionKeyButtonBar.addWidget(self.pushButtonMove)
        self.pushButtonDirectory = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonDirectory.setFlat(True)
        self.pushButtonDirectory.setObjectName("pushButtonDirectory")
        self.horizontalLayoutFunctionKeyButtonBar.addWidget(self.pushButtonDirectory)
        self.pushButtonDelete = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonDelete.setFlat(True)
        self.pushButtonDelete.setObjectName("pushButtonDelete")
        self.horizontalLayoutFunctionKeyButtonBar.addWidget(self.pushButtonDelete)
        self.pushButtonTerminal = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonTerminal.setFlat(True)
        self.pushButtonTerminal.setObjectName("pushButtonTerminal")
        self.horizontalLayoutFunctionKeyButtonBar.addWidget(self.pushButtonTerminal)
        self.pushButtonExit = QtWidgets.QPushButton(self.centralwidget)
        self.pushButtonExit.setFlat(True)
        self.pushButtonExit.setObjectName("pushButtonExit")
        self.horizontalLayoutFunctionKeyButtonBar.addWidget(self.pushButtonExit)
        self.verticalLayoutBottomBars.addLayout(self.horizontalLayoutFunctionKeyButtonBar)
        self.gridLayout.addLayout(self.verticalLayoutBottomBars, 4, 0, 1, 2)
        self.gridLayout.setRowMinimumHeight(0, 32)
        self.gridLayout.setRowMinimumHeight(2, 32)
        self.gridLayout.setRowMinimumHeight(4, 64)
        self.gridLayout.setRowStretch(0, 1)
        self.gridLayout.setRowStretch(2, 1)
        self.gridLayout.setRowStretch(3, 9)
        self.gridLayout.setRowStretch(4, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1396, 26))
        self.menubar.setObjectName("menubar")
        self.menuFiles = QtWidgets.QMenu(self.menubar)
        self.menuFiles.setObjectName("menuFiles")
        self.menuMark = QtWidgets.QMenu(self.menubar)
        self.menuMark.setObjectName("menuMark")
        self.menuSearch = QtWidgets.QMenu(self.menubar)
        self.menuSearch.setObjectName("menuSearch")
        self.menuNetwork = QtWidgets.QMenu(self.menubar)
        self.menuNetwork.setObjectName("menuNetwork")
        self.menuTabs = QtWidgets.QMenu(self.menubar)
        self.menuTabs.setObjectName("menuTabs")
        self.menuTab_Options = QtWidgets.QMenu(self.menuTabs)
        self.menuTab_Options.setObjectName("menuTab_Options")
        self.menuFavorities = QtWidgets.QMenu(self.menubar)
        self.menuFavorities.setObjectName("menuFavorities")
        self.menuShow = QtWidgets.QMenu(self.menubar)
        self.menuShow.setObjectName("menuShow")
        self.menuConfiguration = QtWidgets.QMenu(self.menubar)
        self.menuConfiguration.setObjectName("menuConfiguration")
        self.menuContents = QtWidgets.QMenu(self.menubar)
        self.menuContents.setObjectName("menuContents")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionCreateSymbolicLink = QtWidgets.QAction(MainWindow)
        self.actionCreateSymbolicLink.setObjectName("actionCreateSymbolicLink")
        self.actionCreateHardLink = QtWidgets.QAction(MainWindow)
        self.actionCreateHardLink.setObjectName("actionCreateHardLink")
        self.actionCreateDirectory = QtWidgets.QAction(MainWindow)
        self.actionCreateDirectory.setObjectName("actionCreateDirectory")
        self.actionCreateShortcut = QtWidgets.QAction(MainWindow)
        self.actionCreateShortcut.setObjectName("actionCreateShortcut")
        self.actionChangeAttributes = QtWidgets.QAction(MainWindow)
        self.actionChangeAttributes.setObjectName("actionChangeAttributes")
        self.actionShowFileProperties = QtWidgets.QAction(MainWindow)
        self.actionShowFileProperties.setObjectName("actionShowFileProperties")
        self.actionEditComment = QtWidgets.QAction(MainWindow)
        self.actionEditComment.setObjectName("actionEditComment")
        self.actionCalculateOccupiedSpace = QtWidgets.QAction(MainWindow)
        self.actionCalculateOccupiedSpace.setObjectName("actionCalculateOccupiedSpace")
        self.actionCompareByContents = QtWidgets.QAction(MainWindow)
        self.actionCompareByContents.setObjectName("actionCompareByContents")
        self.actionMultiRenameTool = QtWidgets.QAction(MainWindow)
        self.actionMultiRenameTool.setObjectName("actionMultiRenameTool")
        self.actionPackFiles = QtWidgets.QAction(MainWindow)
        self.actionPackFiles.setObjectName("actionPackFiles")
        self.actionExtractFiles = QtWidgets.QAction(MainWindow)
        self.actionExtractFiles.setObjectName("actionExtractFiles")
        self.actionTestArchive = QtWidgets.QAction(MainWindow)
        self.actionTestArchive.setObjectName("actionTestArchive")
        self.actionSplitFile = QtWidgets.QAction(MainWindow)
        self.actionSplitFile.setObjectName("actionSplitFile")
        self.actionCombineFiles = QtWidgets.QAction(MainWindow)
        self.actionCombineFiles.setObjectName("actionCombineFiles")
        self.actionCalculateChecksum = QtWidgets.QAction(MainWindow)
        self.actionCalculateChecksum.setObjectName("actionCalculateChecksum")
        self.actionVerifyChecksum = QtWidgets.QAction(MainWindow)
        self.actionVerifyChecksum.setObjectName("actionVerifyChecksum")
        self.actionWipe = QtWidgets.QAction(MainWindow)
        self.actionWipe.setObjectName("actionWipe")
        self.actionDelete = QtWidgets.QAction(MainWindow)
        self.actionDelete.setObjectName("actionDelete")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionSelectGroup = QtWidgets.QAction(MainWindow)
        self.actionSelectGroup.setObjectName("actionSelectGroup")
        self.actionUnselectGroup = QtWidgets.QAction(MainWindow)
        self.actionUnselectGroup.setObjectName("actionUnselectGroup")
        self.actionSelectAll = QtWidgets.QAction(MainWindow)
        self.actionSelectAll.setObjectName("actionSelectAll")
        self.actionUnselectAll = QtWidgets.QAction(MainWindow)
        self.actionUnselectAll.setObjectName("actionUnselectAll")
        self.actionInvertSelection = QtWidgets.QAction(MainWindow)
        self.actionInvertSelection.setObjectName("actionInvertSelection")
        self.actionSelectAllWithTheSameExtension = QtWidgets.QAction(MainWindow)
        self.actionSelectAllWithTheSameExtension.setObjectName("actionSelectAllWithTheSameExtension")
        self.actionUnselectAllWithTheSameExtension = QtWidgets.QAction(MainWindow)
        self.actionUnselectAllWithTheSameExtension.setObjectName("actionUnselectAllWithTheSameExtension")
        self.actionSaveSelection = QtWidgets.QAction(MainWindow)
        self.actionSaveSelection.setObjectName("actionSaveSelection")
        self.actionRestoreSelection = QtWidgets.QAction(MainWindow)
        self.actionRestoreSelection.setObjectName("actionRestoreSelection")
        self.actionSaveSelectionToFile = QtWidgets.QAction(MainWindow)
        self.actionSaveSelectionToFile.setObjectName("actionSaveSelectionToFile")
        self.actionLoadSelectionFromFile = QtWidgets.QAction(MainWindow)
        self.actionLoadSelectionFromFile.setObjectName("actionLoadSelectionFromFile")
        self.actionLoadSelectionFromClipboard = QtWidgets.QAction(MainWindow)
        self.actionLoadSelectionFromClipboard.setObjectName("actionLoadSelectionFromClipboard")
        self.actionCopyFilenameToClipboard = QtWidgets.QAction(MainWindow)
        self.actionCopyFilenameToClipboard.setObjectName("actionCopyFilenameToClipboard")
        self.actionCopyFilenameWithFullPath = QtWidgets.QAction(MainWindow)
        self.actionCopyFilenameWithFullPath.setObjectName("actionCopyFilenameWithFullPath")
        self.actionCopyAllShownColumns = QtWidgets.QAction(MainWindow)
        self.actionCopyAllShownColumns.setObjectName("actionCopyAllShownColumns")
        self.actionCompareDirectories = QtWidgets.QAction(MainWindow)
        self.actionCompareDirectories.setObjectName("actionCompareDirectories")
        self.actionSearch = QtWidgets.QAction(MainWindow)
        self.actionSearch.setObjectName("actionSearch")
        self.actionNewSearchInstance = QtWidgets.QAction(MainWindow)
        self.actionNewSearchInstance.setObjectName("actionNewSearchInstance")
        self.actionViewCurrentSearchInstances = QtWidgets.QAction(MainWindow)
        self.actionViewCurrentSearchInstances.setObjectName("actionViewCurrentSearchInstances")
        self.actionDirectoryHotlist = QtWidgets.QAction(MainWindow)
        self.actionDirectoryHotlist.setObjectName("actionDirectoryHotlist")
        self.actionSynchronizeDirs = QtWidgets.QAction(MainWindow)
        self.actionSynchronizeDirs.setObjectName("actionSynchronizeDirs")
        self.actionRunTerminal = QtWidgets.QAction(MainWindow)
        self.actionRunTerminal.setObjectName("actionRunTerminal")
        self.actionExecuteInternalCommand = QtWidgets.QAction(MainWindow)
        self.actionExecuteInternalCommand.setObjectName("actionExecuteInternalCommand")
        self.actionFlatView = QtWidgets.QAction(MainWindow)
        self.actionFlatView.setObjectName("actionFlatView")
        self.actionOpenVFSList = QtWidgets.QAction(MainWindow)
        self.actionOpenVFSList.setObjectName("actionOpenVFSList")
        self.actionSwapPanels = QtWidgets.QAction(MainWindow)
        self.actionSwapPanels.setObjectName("actionSwapPanels")
        self.actionTargetSource = QtWidgets.QAction(MainWindow)
        self.actionTargetSource.setObjectName("actionTargetSource")
        self.actionShowOccupiedSpace = QtWidgets.QAction(MainWindow)
        self.actionShowOccupiedSpace.setObjectName("actionShowOccupiedSpace")
        self.actionNetworkConnect = QtWidgets.QAction(MainWindow)
        self.actionNetworkConnect.setObjectName("actionNetworkConnect")
        self.actionNetworkDisconnect = QtWidgets.QAction(MainWindow)
        self.actionNetworkDisconnect.setObjectName("actionNetworkDisconnect")
        self.actionMapNetworkDrive = QtWidgets.QAction(MainWindow)
        self.actionMapNetworkDrive.setObjectName("actionMapNetworkDrive")
        self.actionDisconnectNetworkDrive = QtWidgets.QAction(MainWindow)
        self.actionDisconnectNetworkDrive.setObjectName("actionDisconnectNetworkDrive")
        self.actionCopyNamesWithUNCPath = QtWidgets.QAction(MainWindow)
        self.actionCopyNamesWithUNCPath.setObjectName("actionCopyNamesWithUNCPath")
        self.actionNewTab = QtWidgets.QAction(MainWindow)
        self.actionNewTab.setObjectName("actionNewTab")
        self.actionRenameTab = QtWidgets.QAction(MainWindow)
        self.actionRenameTab.setObjectName("actionRenameTab")
        self.actionOpenFolderInNewTab = QtWidgets.QAction(MainWindow)
        self.actionOpenFolderInNewTab.setObjectName("actionOpenFolderInNewTab")
        self.actionCloseTab = QtWidgets.QAction(MainWindow)
        self.actionCloseTab.setObjectName("actionCloseTab")
        self.actionCloseAllTabs = QtWidgets.QAction(MainWindow)
        self.actionCloseAllTabs.setObjectName("actionCloseAllTabs")
        self.actionCloseDuplicateTabs = QtWidgets.QAction(MainWindow)
        self.actionCloseDuplicateTabs.setObjectName("actionCloseDuplicateTabs")
        self.actionSwitchToNextTab = QtWidgets.QAction(MainWindow)
        self.actionSwitchToNextTab.setObjectName("actionSwitchToNextTab")
        self.actionSwitchToPreviousTab = QtWidgets.QAction(MainWindow)
        self.actionSwitchToPreviousTab.setObjectName("actionSwitchToPreviousTab")
        self.actionSaveTabsToFile = QtWidgets.QAction(MainWindow)
        self.actionSaveTabsToFile.setObjectName("actionSaveTabsToFile")
        self.actionLoadTabsFromFile = QtWidgets.QAction(MainWindow)
        self.actionLoadTabsFromFile.setObjectName("actionLoadTabsFromFile")
        self.actionSaveCurrentTabsToNewFavoriteTabs = QtWidgets.QAction(MainWindow)
        self.actionSaveCurrentTabsToNewFavoriteTabs.setObjectName("actionSaveCurrentTabsToNewFavoriteTabs")
        self.actionLoadTabsFromFavoriteTabs = QtWidgets.QAction(MainWindow)
        self.actionLoadTabsFromFavoriteTabs.setObjectName("actionLoadTabsFromFavoriteTabs")
        self.actionConfigurationOfFolderTabs = QtWidgets.QAction(MainWindow)
        self.actionConfigurationOfFolderTabs.setObjectName("actionConfigurationOfFolderTabs")
        self.actionConfigurationOfFavoriteTabs = QtWidgets.QAction(MainWindow)
        self.actionConfigurationOfFavoriteTabs.setObjectName("actionConfigurationOfFavoriteTabs")
        self.actionNormal = QtWidgets.QAction(MainWindow)
        self.actionNormal.setObjectName("actionNormal")
        self.actionLocked = QtWidgets.QAction(MainWindow)
        self.actionLocked.setObjectName("actionLocked")
        self.actionLockedWithDirectoryChangesAllowed = QtWidgets.QAction(MainWindow)
        self.actionLockedWithDirectoryChangesAllowed.setObjectName("actionLockedWithDirectoryChangesAllowed")
        self.actionLockedWithDirectoriesOpenedInNewTabs = QtWidgets.QAction(MainWindow)
        self.actionLockedWithDirectoriesOpenedInNewTabs.setObjectName("actionLockedWithDirectoriesOpenedInNewTabs")
        self.actionSetAllTabsToNormal = QtWidgets.QAction(MainWindow)
        self.actionSetAllTabsToNormal.setObjectName("actionSetAllTabsToNormal")
        self.actionSetAllTabsToLocked = QtWidgets.QAction(MainWindow)
        self.actionSetAllTabsToLocked.setObjectName("actionSetAllTabsToLocked")
        self.actionAllTabsLockedWithDirChangesAllowed = QtWidgets.QAction(MainWindow)
        self.actionAllTabsLockedWithDirChangesAllowed.setObjectName("actionAllTabsLockedWithDirChangesAllowed")
        self.actionAllTabsLockedWithDirOpenedInNewTabs = QtWidgets.QAction(MainWindow)
        self.actionAllTabsLockedWithDirOpenedInNewTabs.setObjectName("actionAllTabsLockedWithDirOpenedInNewTabs")
        self.actionSaveCurrentTabsToNewFavoriteTabs2 = QtWidgets.QAction(MainWindow)
        self.actionSaveCurrentTabsToNewFavoriteTabs2.setObjectName("actionSaveCurrentTabsToNewFavoriteTabs2")
        self.actionResaveOnTheLastFavoriteTabsLoaded = QtWidgets.QAction(MainWindow)
        self.actionResaveOnTheLastFavoriteTabsLoaded.setObjectName("actionResaveOnTheLastFavoriteTabsLoaded")
        self.actionRelopadTheLastFavoriteTabsLoaded = QtWidgets.QAction(MainWindow)
        self.actionRelopadTheLastFavoriteTabsLoaded.setObjectName("actionRelopadTheLastFavoriteTabsLoaded")
        self.actionConfigurationOfFavoriteTabs2 = QtWidgets.QAction(MainWindow)
        self.actionConfigurationOfFavoriteTabs2.setObjectName("actionConfigurationOfFavoriteTabs2")
        self.actionBriefView = QtWidgets.QAction(MainWindow)
        self.actionBriefView.setObjectName("actionBriefView")
        self.actionFull = QtWidgets.QAction(MainWindow)
        self.actionFull.setObjectName("actionFull")
        self.actionThumbnails = QtWidgets.QAction(MainWindow)
        self.actionThumbnails.setObjectName("actionThumbnails")
        self.actionQuickViewPanel = QtWidgets.QAction(MainWindow)
        self.actionQuickViewPanel.setObjectName("actionQuickViewPanel")
        self.actionTreeViewPanel = QtWidgets.QAction(MainWindow)
        self.actionTreeViewPanel.setObjectName("actionTreeViewPanel")
        self.actionSortByName = QtWidgets.QAction(MainWindow)
        self.actionSortByName.setObjectName("actionSortByName")
        self.actionSortByExtension = QtWidgets.QAction(MainWindow)
        self.actionSortByExtension.setObjectName("actionSortByExtension")
        self.actionSortBySize = QtWidgets.QAction(MainWindow)
        self.actionSortBySize.setObjectName("actionSortBySize")
        self.actionSortByDate = QtWidgets.QAction(MainWindow)
        self.actionSortByDate.setObjectName("actionSortByDate")
        self.actionSortByAttributes = QtWidgets.QAction(MainWindow)
        self.actionSortByAttributes.setObjectName("actionSortByAttributes")
        self.actionReverseOrder = QtWidgets.QAction(MainWindow)
        self.actionReverseOrder.setObjectName("actionReverseOrder")
        self.actionRefresh = QtWidgets.QAction(MainWindow)
        self.actionRefresh.setObjectName("actionRefresh")
        self.actionShowHiddenSystemFiles = QtWidgets.QAction(MainWindow)
        self.actionShowHiddenSystemFiles.setObjectName("actionShowHiddenSystemFiles")
        self.actionHorizontalPanelsMode = QtWidgets.QAction(MainWindow)
        self.actionHorizontalPanelsMode.setObjectName("actionHorizontalPanelsMode")
        self.actionOperationsViewer = QtWidgets.QAction(MainWindow)
        self.actionOperationsViewer.setObjectName("actionOperationsViewer")
        self.actionSave_current_tabs_to_a_New_Favorite_Tabs_2 = QtWidgets.QAction(MainWindow)
        self.actionSave_current_tabs_to_a_New_Favorite_Tabs_2.setObjectName("actionSave_current_tabs_to_a_New_Favorite_Tabs_2")
        self.actionResave_on_the_last_Favorite_Tabs_loaded_2 = QtWidgets.QAction(MainWindow)
        self.actionResave_on_the_last_Favorite_Tabs_loaded_2.setObjectName("actionResave_on_the_last_Favorite_Tabs_loaded_2")
        self.actionReload_the_last_Favorite_Tabs_loaded = QtWidgets.QAction(MainWindow)
        self.actionReload_the_last_Favorite_Tabs_loaded.setObjectName("actionReload_the_last_Favorite_Tabs_loaded")
        self.actionConfiguration_of_Favorite_Tabs_3 = QtWidgets.QAction(MainWindow)
        self.actionConfiguration_of_Favorite_Tabs_3.setObjectName("actionConfiguration_of_Favorite_Tabs_3")
        self.actionOptions = QtWidgets.QAction(MainWindow)
        self.actionOptions.setObjectName("actionOptions")
        self.actionConfigurationOfDirectoryHotlist = QtWidgets.QAction(MainWindow)
        self.actionConfigurationOfDirectoryHotlist.setObjectName("actionConfigurationOfDirectoryHotlist")
        self.actionConfigurationOfFavoriteTabs4 = QtWidgets.QAction(MainWindow)
        self.actionConfigurationOfFavoriteTabs4.setObjectName("actionConfigurationOfFavoriteTabs4")
        self.actionConfigurationOfFileAssociations = QtWidgets.QAction(MainWindow)
        self.actionConfigurationOfFileAssociations.setObjectName("actionConfigurationOfFileAssociations")
        self.actionConfigurationOfFolderTabs2 = QtWidgets.QAction(MainWindow)
        self.actionConfigurationOfFolderTabs2.setObjectName("actionConfigurationOfFolderTabs2")
        self.actionConfigurationOfArchivers = QtWidgets.QAction(MainWindow)
        self.actionConfigurationOfArchivers.setObjectName("actionConfigurationOfArchivers")
        self.actionSavePosition = QtWidgets.QAction(MainWindow)
        self.actionSavePosition.setObjectName("actionSavePosition")
        self.actionSaveSettings = QtWidgets.QAction(MainWindow)
        self.actionSaveSettings.setObjectName("actionSaveSettings")
        self.actionKeyboard = QtWidgets.QAction(MainWindow)
        self.actionKeyboard.setObjectName("actionKeyboard")
        self.actionVisitDoubleCommanderWebsite = QtWidgets.QAction(MainWindow)
        self.actionVisitDoubleCommanderWebsite.setObjectName("actionVisitDoubleCommanderWebsite")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionTBRefresh = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_refresh.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon5.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_refresh.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBRefresh.setIcon(icon5)
        self.actionTBRefresh.setObjectName("actionTBRefresh")
        self.actionTBRunTerminal = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_runterm.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBRunTerminal.setIcon(icon6)
        self.actionTBRunTerminal.setObjectName("actionTBRunTerminal")
        self.actionTBOptions = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_options.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBOptions.setIcon(icon7)
        self.actionTBOptions.setObjectName("actionTBOptions")
        self.actionTBBriefView = QtWidgets.QAction(MainWindow)
        self.actionTBBriefView.setCheckable(True)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_briefview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon8.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_briefview.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBBriefView.setIcon(icon8)
        self.actionTBBriefView.setObjectName("actionTBBriefView")
        self.actionTBColumnsView = QtWidgets.QAction(MainWindow)
        self.actionTBColumnsView.setCheckable(True)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_columnsview.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBColumnsView.setIcon(icon9)
        self.actionTBColumnsView.setObjectName("actionTBColumnsView")
        self.actionTBThumbnails = QtWidgets.QAction(MainWindow)
        self.actionTBThumbnails.setCheckable(True)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_thumbnailsview.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBThumbnails.setIcon(icon10)
        self.actionTBThumbnails.setObjectName("actionTBThumbnails")
        self.actionTBFlatView = QtWidgets.QAction(MainWindow)
        self.actionTBFlatView.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_flatview.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBFlatView.setIcon(icon11)
        self.actionTBFlatView.setObjectName("actionTBFlatView")
        self.actionTBGotoPreviousEntryInHistory = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_viewhistoryprev.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBGotoPreviousEntryInHistory.setIcon(icon12)
        self.actionTBGotoPreviousEntryInHistory.setObjectName("actionTBGotoPreviousEntryInHistory")
        self.actionTBGotoPreviousEntryInHistory2 = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_viewhistorynext.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBGotoPreviousEntryInHistory2.setIcon(icon13)
        self.actionTBGotoPreviousEntryInHistory2.setObjectName("actionTBGotoPreviousEntryInHistory2")
        self.actionTBSelectGroup = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_markplus.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBSelectGroup.setIcon(icon14)
        self.actionTBSelectGroup.setObjectName("actionTBSelectGroup")
        self.actionTBUnselectGroup = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_markminus.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon15.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_markplus.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBUnselectGroup.setIcon(icon15)
        self.actionTBUnselectGroup.setObjectName("actionTBUnselectGroup")
        self.actionTBInvertSelection = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_markinvert.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon16.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_markplus.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBInvertSelection.setIcon(icon16)
        self.actionTBInvertSelection.setObjectName("actionTBInvertSelection")
        self.actionTBPackFiles = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_packfiles.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBPackFiles.setIcon(icon17)
        self.actionTBPackFiles.setObjectName("actionTBPackFiles")
        self.actionTBExtractFiles = QtWidgets.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_extractfiles.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBExtractFiles.setIcon(icon18)
        self.actionTBExtractFiles.setObjectName("actionTBExtractFiles")
        self.actionTBSearch = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_search.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBSearch.setIcon(icon19)
        self.actionTBSearch.setObjectName("actionTBSearch")
        self.actionTBMultiRenameTool = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_multirename.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBMultiRenameTool.setIcon(icon20)
        self.actionTBMultiRenameTool.setObjectName("actionTBMultiRenameTool")
        self.actionTBSynchronizeDirs = QtWidgets.QAction(MainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_syncdirs.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBSynchronizeDirs.setIcon(icon21)
        self.actionTBSynchronizeDirs.setObjectName("actionTBSynchronizeDirs")
        self.actionTBCopyFilenameWithFullPath = QtWidgets.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap("../pyCommander/pixmaps/dctheme/16x16/actions/cm_copyfullnamestoclip.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionTBCopyFilenameWithFullPath.setIcon(icon22)
        self.actionTBCopyFilenameWithFullPath.setObjectName("actionTBCopyFilenameWithFullPath")
        self.menuFiles.addAction(self.actionCreateSymbolicLink)
        self.menuFiles.addAction(self.actionCreateHardLink)
        self.menuFiles.addAction(self.actionCreateDirectory)
        self.menuFiles.addAction(self.actionCreateShortcut)
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.actionChangeAttributes)
        self.menuFiles.addAction(self.actionShowFileProperties)
        self.menuFiles.addAction(self.actionEditComment)
        self.menuFiles.addAction(self.actionCalculateOccupiedSpace)
        self.menuFiles.addAction(self.actionCompareByContents)
        self.menuFiles.addAction(self.actionMultiRenameTool)
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.actionPackFiles)
        self.menuFiles.addAction(self.actionExtractFiles)
        self.menuFiles.addAction(self.actionTestArchive)
        self.menuFiles.addAction(self.actionSplitFile)
        self.menuFiles.addAction(self.actionCombineFiles)
        self.menuFiles.addAction(self.actionCalculateChecksum)
        self.menuFiles.addAction(self.actionVerifyChecksum)
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.actionWipe)
        self.menuFiles.addAction(self.actionDelete)
        self.menuFiles.addAction(self.actionExit)
        self.menuMark.addAction(self.actionSelectGroup)
        self.menuMark.addAction(self.actionUnselectGroup)
        self.menuMark.addAction(self.actionSelectAll)
        self.menuMark.addAction(self.actionUnselectAll)
        self.menuMark.addAction(self.actionInvertSelection)
        self.menuMark.addAction(self.actionSelectAllWithTheSameExtension)
        self.menuMark.addAction(self.actionUnselectAllWithTheSameExtension)
        self.menuMark.addSeparator()
        self.menuMark.addAction(self.actionSaveSelection)
        self.menuMark.addAction(self.actionRestoreSelection)
        self.menuMark.addAction(self.actionSaveSelectionToFile)
        self.menuMark.addAction(self.actionLoadSelectionFromFile)
        self.menuMark.addAction(self.actionLoadSelectionFromClipboard)
        self.menuMark.addSeparator()
        self.menuMark.addAction(self.actionCopyFilenameToClipboard)
        self.menuMark.addAction(self.actionCopyFilenameWithFullPath)
        self.menuMark.addAction(self.actionCopyAllShownColumns)
        self.menuMark.addSeparator()
        self.menuMark.addAction(self.actionCompareDirectories)
        self.menuSearch.addAction(self.actionSearch)
        self.menuSearch.addAction(self.actionNewSearchInstance)
        self.menuSearch.addAction(self.actionViewCurrentSearchInstances)
        self.menuSearch.addAction(self.actionDirectoryHotlist)
        self.menuSearch.addAction(self.actionSynchronizeDirs)
        self.menuSearch.addSeparator()
        self.menuSearch.addAction(self.actionRunTerminal)
        self.menuSearch.addAction(self.actionExecuteInternalCommand)
        self.menuSearch.addSeparator()
        self.menuSearch.addAction(self.actionFlatView)
        self.menuSearch.addAction(self.actionOpenVFSList)
        self.menuSearch.addAction(self.actionSwapPanels)
        self.menuSearch.addAction(self.actionTargetSource)
        self.menuSearch.addSeparator()
        self.menuSearch.addAction(self.actionShowOccupiedSpace)
        self.menuNetwork.addAction(self.actionNetworkConnect)
        self.menuNetwork.addAction(self.actionNetworkDisconnect)
        self.menuNetwork.addSeparator()
        self.menuNetwork.addAction(self.actionMapNetworkDrive)
        self.menuNetwork.addAction(self.actionDisconnectNetworkDrive)
        self.menuNetwork.addSeparator()
        self.menuNetwork.addAction(self.actionCopyNamesWithUNCPath)
        self.menuTab_Options.addAction(self.actionNormal)
        self.menuTab_Options.addAction(self.actionLocked)
        self.menuTab_Options.addAction(self.actionLockedWithDirectoryChangesAllowed)
        self.menuTab_Options.addAction(self.actionLockedWithDirectoriesOpenedInNewTabs)
        self.menuTab_Options.addSeparator()
        self.menuTab_Options.addAction(self.actionSetAllTabsToNormal)
        self.menuTab_Options.addAction(self.actionSetAllTabsToLocked)
        self.menuTab_Options.addAction(self.actionAllTabsLockedWithDirChangesAllowed)
        self.menuTab_Options.addAction(self.actionAllTabsLockedWithDirOpenedInNewTabs)
        self.menuTabs.addAction(self.actionNewTab)
        self.menuTabs.addAction(self.actionRenameTab)
        self.menuTabs.addAction(self.actionOpenFolderInNewTab)
        self.menuTabs.addSeparator()
        self.menuTabs.addAction(self.actionCloseTab)
        self.menuTabs.addAction(self.actionCloseAllTabs)
        self.menuTabs.addAction(self.actionCloseDuplicateTabs)
        self.menuTabs.addSeparator()
        self.menuTabs.addAction(self.menuTab_Options.menuAction())
        self.menuTabs.addSeparator()
        self.menuTabs.addAction(self.actionSwitchToNextTab)
        self.menuTabs.addAction(self.actionSwitchToPreviousTab)
        self.menuTabs.addSeparator()
        self.menuTabs.addAction(self.actionSaveTabsToFile)
        self.menuTabs.addAction(self.actionLoadTabsFromFile)
        self.menuTabs.addAction(self.actionSaveCurrentTabsToNewFavoriteTabs)
        self.menuTabs.addAction(self.actionLoadTabsFromFavoriteTabs)
        self.menuTabs.addSeparator()
        self.menuTabs.addAction(self.actionConfigurationOfFolderTabs)
        self.menuTabs.addAction(self.actionConfigurationOfFavoriteTabs)
        self.menuFavorities.addAction(self.actionSaveCurrentTabsToNewFavoriteTabs2)
        self.menuFavorities.addAction(self.actionResaveOnTheLastFavoriteTabsLoaded)
        self.menuFavorities.addAction(self.actionRelopadTheLastFavoriteTabsLoaded)
        self.menuFavorities.addAction(self.actionConfigurationOfFavoriteTabs2)
        self.menuShow.addAction(self.actionBriefView)
        self.menuShow.addAction(self.actionFull)
        self.menuShow.addAction(self.actionThumbnails)
        self.menuShow.addSeparator()
        self.menuShow.addAction(self.actionQuickViewPanel)
        self.menuShow.addAction(self.actionTreeViewPanel)
        self.menuShow.addAction(self.actionSortByName)
        self.menuShow.addAction(self.actionSortByExtension)
        self.menuShow.addAction(self.actionSortBySize)
        self.menuShow.addAction(self.actionSortByDate)
        self.menuShow.addAction(self.actionSortByAttributes)
        self.menuShow.addSeparator()
        self.menuShow.addAction(self.actionReverseOrder)
        self.menuShow.addAction(self.actionRefresh)
        self.menuShow.addSeparator()
        self.menuShow.addAction(self.actionShowHiddenSystemFiles)
        self.menuShow.addSeparator()
        self.menuShow.addAction(self.actionHorizontalPanelsMode)
        self.menuShow.addSeparator()
        self.menuShow.addAction(self.actionOperationsViewer)
        self.menuConfiguration.addAction(self.actionOptions)
        self.menuConfiguration.addAction(self.actionConfigurationOfDirectoryHotlist)
        self.menuConfiguration.addAction(self.actionConfigurationOfFavoriteTabs4)
        self.menuConfiguration.addAction(self.actionConfigurationOfFileAssociations)
        self.menuConfiguration.addAction(self.actionConfigurationOfFolderTabs2)
        self.menuConfiguration.addAction(self.actionConfigurationOfArchivers)
        self.menuConfiguration.addSeparator()
        self.menuConfiguration.addAction(self.actionSavePosition)
        self.menuConfiguration.addAction(self.actionSaveSettings)
        self.menuContents.addAction(self.actionKeyboard)
        self.menuContents.addAction(self.actionVisitDoubleCommanderWebsite)
        self.menuContents.addSeparator()
        self.menuContents.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFiles.menuAction())
        self.menubar.addAction(self.menuMark.menuAction())
        self.menubar.addAction(self.menuSearch.menuAction())
        self.menubar.addAction(self.menuNetwork.menuAction())
        self.menubar.addAction(self.menuTabs.menuAction())
        self.menubar.addAction(self.menuFavorities.menuAction())
        self.menubar.addAction(self.menuShow.menuAction())
        self.menubar.addAction(self.menuConfiguration.menuAction())
        self.menubar.addAction(self.menuContents.menuAction())
        self.toolBar.addAction(self.actionTBRefresh)
        self.toolBar.addAction(self.actionTBRunTerminal)
        self.toolBar.addAction(self.actionTBOptions)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionTBBriefView)
        self.toolBar.addAction(self.actionTBColumnsView)
        self.toolBar.addAction(self.actionTBThumbnails)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionTBFlatView)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionTBGotoPreviousEntryInHistory)
        self.toolBar.addAction(self.actionTBGotoPreviousEntryInHistory2)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionTBSelectGroup)
        self.toolBar.addAction(self.actionTBUnselectGroup)
        self.toolBar.addAction(self.actionTBInvertSelection)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionTBPackFiles)
        self.toolBar.addAction(self.actionTBExtractFiles)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionTBSearch)
        self.toolBar.addAction(self.actionTBMultiRenameTool)
        self.toolBar.addAction(self.actionTBSynchronizeDirs)
        self.toolBar.addAction(self.actionTBCopyFilenameWithFullPath)

        self.retranslateUi(MainWindow)
        self.tabWidgetLeftPanel.setCurrentIndex(0)
        self.tabWidgetRightPanel.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.pushButtonLeftVFS, self.pushButtonExit)
        MainWindow.setTabOrder(self.pushButtonExit, self.pushButtonRightVFS)
        MainWindow.setTabOrder(self.pushButtonRightVFS, self.comboBoxLeftDrives)
        MainWindow.setTabOrder(self.comboBoxLeftDrives, self.pushButtonLeftDirectoryHotlist)
        MainWindow.setTabOrder(self.pushButtonLeftDirectoryHotlist, self.pushButtonLeftDrive1)
        MainWindow.setTabOrder(self.pushButtonLeftDrive1, self.pushButtonLeftGotoRootDirectory)
        MainWindow.setTabOrder(self.pushButtonLeftGotoRootDirectory, self.pushButtonLeftGotoParentDirectory)
        MainWindow.setTabOrder(self.pushButtonLeftGotoParentDirectory, self.pushButtonLeftGotoHomeDirectory)
        MainWindow.setTabOrder(self.pushButtonLeftGotoHomeDirectory, self.pushButtonLeftRightLeftPanel)
        MainWindow.setTabOrder(self.pushButtonLeftRightLeftPanel, self.comboBoxRightDrives)
        MainWindow.setTabOrder(self.comboBoxRightDrives, self.pushButtonRightDirectoryHotlist)
        MainWindow.setTabOrder(self.pushButtonRightDirectoryHotlist, self.pushButtonRightGotoRootDirectory)
        MainWindow.setTabOrder(self.pushButtonRightGotoRootDirectory, self.pushButtonRightGotoParentDirectory)
        MainWindow.setTabOrder(self.pushButtonRightGotoParentDirectory, self.pushButtonRightGotoHomeDirectory)
        MainWindow.setTabOrder(self.pushButtonRightGotoHomeDirectory, self.pushButtonRightRightLeftPanel)
        MainWindow.setTabOrder(self.pushButtonRightRightLeftPanel, self.tabWidgetLeftPanel)
        MainWindow.setTabOrder(self.tabWidgetLeftPanel, self.tabWidgetRightPanel)
        MainWindow.setTabOrder(self.tabWidgetRightPanel, self.treeWidgetLeftFilePanel1)
        MainWindow.setTabOrder(self.treeWidgetLeftFilePanel1, self.treeWidgetRightFilePanel1)
        MainWindow.setTabOrder(self.treeWidgetRightFilePanel1, self.pushButtonView)
        MainWindow.setTabOrder(self.pushButtonView, self.pushButtonEdit)
        MainWindow.setTabOrder(self.pushButtonEdit, self.pushButtonCopy)
        MainWindow.setTabOrder(self.pushButtonCopy, self.pushButtonRightDrive1)
        MainWindow.setTabOrder(self.pushButtonRightDrive1, self.comboBoxPath)
        MainWindow.setTabOrder(self.comboBoxPath, self.pushButtonMove)
        MainWindow.setTabOrder(self.pushButtonMove, self.pushButtonDirectory)
        MainWindow.setTabOrder(self.pushButtonDirectory, self.pushButtonDelete)
        MainWindow.setTabOrder(self.pushButtonDelete, self.pushButtonTerminal)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButtonLeftDrive1.setText(_translate("MainWindow", " C"))
        self.pushButtonLeftVFS.setText(_translate("MainWindow", " \\\\"))
        self.pushButtonRightDrive1.setText(_translate("MainWindow", " C"))
        self.pushButtonRightVFS.setText(_translate("MainWindow", " \\\\"))
        self.comboBoxLeftDrives.setItemText(0, _translate("MainWindow", "C:"))
        self.comboBoxLeftDrives.setItemText(1, _translate("MainWindow", "\\\\"))
        self.labelLeftDiskVolumeSize.setText(_translate("MainWindow", "396Gb"))
        self.pushButtonLeftDirectoryHotlist.setToolTip(_translate("MainWindow", "Directory Hotlist"))
        self.pushButtonLeftDirectoryHotlist.setText(_translate("MainWindow", "*"))
        self.pushButtonLeftGotoRootDirectory.setToolTip(_translate("MainWindow", "Go to root directory"))
        self.pushButtonLeftGotoRootDirectory.setText(_translate("MainWindow", "\\"))
        self.pushButtonLeftGotoParentDirectory.setToolTip(_translate("MainWindow", "Go to parent directory"))
        self.pushButtonLeftGotoParentDirectory.setText(_translate("MainWindow", ".."))
        self.pushButtonLeftGotoHomeDirectory.setToolTip(_translate("MainWindow", "Go to home directory"))
        self.pushButtonLeftGotoHomeDirectory.setText(_translate("MainWindow", "~"))
        self.pushButtonLeftRightLeftPanel.setToolTip(_translate("MainWindow", "Show the current directory of the  right panel to the left panel"))
        self.pushButtonLeftRightLeftPanel.setText(_translate("MainWindow", "<"))
        self.comboBoxRightDrives.setItemText(0, _translate("MainWindow", "C:"))
        self.comboBoxRightDrives.setItemText(1, _translate("MainWindow", "\\\\"))
        self.labelRightDiskVolumeSize.setText(_translate("MainWindow", "396Gb"))
        self.pushButtonRightDirectoryHotlist.setToolTip(_translate("MainWindow", "Directory Hotlist"))
        self.pushButtonRightDirectoryHotlist.setText(_translate("MainWindow", "*"))
        self.pushButtonRightGotoRootDirectory.setToolTip(_translate("MainWindow", "Go to root directory"))
        self.pushButtonRightGotoRootDirectory.setText(_translate("MainWindow", "\\"))
        self.pushButtonRightGotoParentDirectory.setToolTip(_translate("MainWindow", "Go to parent directory"))
        self.pushButtonRightGotoParentDirectory.setText(_translate("MainWindow", ".."))
        self.pushButtonRightGotoHomeDirectory.setToolTip(_translate("MainWindow", "Go to home directory"))
        self.pushButtonRightGotoHomeDirectory.setText(_translate("MainWindow", "~"))
        self.pushButtonRightRightLeftPanel.setToolTip(_translate("MainWindow", "Show the current directory of the  left panel to the right panel"))
        self.pushButtonRightRightLeftPanel.setText(_translate("MainWindow", "<"))
        self.labelLeftTabCurrentDirectoryBar1.setText(_translate("MainWindow", "C:Users"))
        self.treeWidgetLeftFilePanel1.headerItem().setText(1, _translate("MainWindow", "Ext"))
        self.treeWidgetLeftFilePanel1.headerItem().setText(2, _translate("MainWindow", "Size"))
        self.treeWidgetLeftFilePanel1.headerItem().setText(3, _translate("MainWindow", "Date"))
        self.treeWidgetLeftFilePanel1.headerItem().setText(4, _translate("MainWindow", "Attr"))
        __sortingEnabled = self.treeWidgetLeftFilePanel1.isSortingEnabled()
        self.treeWidgetLeftFilePanel1.setSortingEnabled(False)
        self.treeWidgetLeftFilePanel1.topLevelItem(0).setText(0, _translate("MainWindow", "[..]"))
        self.treeWidgetLeftFilePanel1.topLevelItem(1).setText(0, _translate("MainWindow", "[algorithms]"))
        self.treeWidgetLeftFilePanel1.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "Алгоритмы. Вводный курс.pdf"))
        self.treeWidgetLeftFilePanel1.topLevelItem(1).child(0).setText(1, _translate("MainWindow", "pdf"))
        self.treeWidgetLeftFilePanel1.topLevelItem(1).child(0).setText(2, _translate("MainWindow", "13.9 M"))
        self.treeWidgetLeftFilePanel1.topLevelItem(1).child(0).setText(3, _translate("MainWindow", "11/1/2022 21:51:04"))
        self.treeWidgetLeftFilePanel1.topLevelItem(1).child(0).setText(4, _translate("MainWindow", "--a--------"))
        self.treeWidgetLeftFilePanel1.setSortingEnabled(__sortingEnabled)
        self.labelLeftFileStatusBar1.setText(_translate("MainWindow", "Selected 0 B of 13.2 MB, files: 0 of 12, folders: 0 of 5"))
        self.tabWidgetLeftPanel.setTabText(self.tabWidgetLeftPanel.indexOf(self.tabLeft1), _translate("MainWindow", "Tab 1"))
        self.tabWidgetLeftPanel.setTabText(self.tabWidgetLeftPanel.indexOf(self.tabLeft2), _translate("MainWindow", "Tab 2"))
        self.labelRightTabCurrentDirectoryBar1.setText(_translate("MainWindow", "C:Users"))
        self.treeWidgetRightFilePanel1.headerItem().setText(0, _translate("MainWindow", "Name"))
        self.treeWidgetRightFilePanel1.headerItem().setText(1, _translate("MainWindow", "Ext"))
        self.treeWidgetRightFilePanel1.headerItem().setText(2, _translate("MainWindow", "Size"))
        self.treeWidgetRightFilePanel1.headerItem().setText(3, _translate("MainWindow", "Date"))
        self.treeWidgetRightFilePanel1.headerItem().setText(4, _translate("MainWindow", "Attr"))
        __sortingEnabled = self.treeWidgetRightFilePanel1.isSortingEnabled()
        self.treeWidgetRightFilePanel1.setSortingEnabled(False)
        self.treeWidgetRightFilePanel1.topLevelItem(0).setText(0, _translate("MainWindow", "[..]"))
        self.treeWidgetRightFilePanel1.topLevelItem(1).setText(0, _translate("MainWindow", "[algorithms]"))
        self.treeWidgetRightFilePanel1.topLevelItem(1).child(0).setText(0, _translate("MainWindow", "Алгоритмы. Вводный курс.pdf"))
        self.treeWidgetRightFilePanel1.topLevelItem(1).child(0).setText(1, _translate("MainWindow", "pdf"))
        self.treeWidgetRightFilePanel1.topLevelItem(1).child(0).setText(2, _translate("MainWindow", "13.9 M"))
        self.treeWidgetRightFilePanel1.topLevelItem(1).child(0).setText(3, _translate("MainWindow", "11/1/22022 21:51:04"))
        self.treeWidgetRightFilePanel1.topLevelItem(1).child(0).setText(4, _translate("MainWindow", "--a----------"))
        self.treeWidgetRightFilePanel1.setSortingEnabled(__sortingEnabled)
        self.labelRightFileStatusBar1.setText(_translate("MainWindow", "Selected 0 B of 13.2 MB, files: 0 of 12, folders: 0 of 5"))
        self.tabWidgetRightPanel.setTabText(self.tabWidgetRightPanel.indexOf(self.tabRight1), _translate("MainWindow", "Tab 1"))
        self.tabWidgetRightPanel.setTabText(self.tabWidgetRightPanel.indexOf(self.tabRight2), _translate("MainWindow", "Tab 2"))
        self.labelPath.setText(_translate("MainWindow", "C:Users"))
        self.pushButtonView.setText(_translate("MainWindow", "View F3"))
        self.pushButtonEdit.setText(_translate("MainWindow", "Edit F4"))
        self.pushButtonCopy.setText(_translate("MainWindow", "Copy F5"))
        self.pushButtonMove.setText(_translate("MainWindow", "Move F6"))
        self.pushButtonDirectory.setText(_translate("MainWindow", "Directory F7"))
        self.pushButtonDelete.setText(_translate("MainWindow", "Delete F8"))
        self.pushButtonTerminal.setText(_translate("MainWindow", "Terminal F9"))
        self.pushButtonExit.setText(_translate("MainWindow", "Exit Alt+X"))
        self.menuFiles.setTitle(_translate("MainWindow", "Files"))
        self.menuMark.setTitle(_translate("MainWindow", "Mark"))
        self.menuSearch.setTitle(_translate("MainWindow", "Commands"))
        self.menuNetwork.setTitle(_translate("MainWindow", "Network"))
        self.menuTabs.setTitle(_translate("MainWindow", "Tabs"))
        self.menuTab_Options.setTitle(_translate("MainWindow", "Tab Options"))
        self.menuFavorities.setTitle(_translate("MainWindow", "Favorities"))
        self.menuShow.setTitle(_translate("MainWindow", "Show"))
        self.menuConfiguration.setTitle(_translate("MainWindow", "Configuration"))
        self.menuContents.setTitle(_translate("MainWindow", "Contents"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionCreateSymbolicLink.setText(_translate("MainWindow", "Create Symbolic Link..."))
        self.actionCreateHardLink.setText(_translate("MainWindow", "Create Hard Link..."))
        self.actionCreateDirectory.setText(_translate("MainWindow", "Create Directory"))
        self.actionCreateDirectory.setShortcut(_translate("MainWindow", "F7"))
        self.actionCreateShortcut.setText(_translate("MainWindow", "Create Shortcut..."))
        self.actionChangeAttributes.setText(_translate("MainWindow", "Change Attributes..."))
        self.actionShowFileProperties.setText(_translate("MainWindow", "Show File Properties"))
        self.actionShowFileProperties.setShortcut(_translate("MainWindow", "Alt+Return"))
        self.actionEditComment.setText(_translate("MainWindow", "Edit Comment..."))
        self.actionCalculateOccupiedSpace.setText(_translate("MainWindow", "Calculate Occupied Space"))
        self.actionCalculateOccupiedSpace.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionCompareByContents.setText(_translate("MainWindow", "Compare by Contents"))
        self.actionMultiRenameTool.setText(_translate("MainWindow", "Multi-Rename Tool"))
        self.actionMultiRenameTool.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.actionPackFiles.setText(_translate("MainWindow", "Pack Files..."))
        self.actionPackFiles.setShortcut(_translate("MainWindow", "Alt+F5"))
        self.actionExtractFiles.setText(_translate("MainWindow", "Extract Files..."))
        self.actionExtractFiles.setShortcut(_translate("MainWindow", "Alt+F9"))
        self.actionTestArchive.setText(_translate("MainWindow", "Test Archive(s)"))
        self.actionTestArchive.setShortcut(_translate("MainWindow", "Alt+Shift+F9"))
        self.actionSplitFile.setText(_translate("MainWindow", "Split File..."))
        self.actionCombineFiles.setText(_translate("MainWindow", "Combine Files..."))
        self.actionCalculateChecksum.setText(_translate("MainWindow", "Calculate Checksum..."))
        self.actionVerifyChecksum.setText(_translate("MainWindow", "Verify Checksum..."))
        self.actionWipe.setText(_translate("MainWindow", "Wipe"))
        self.actionWipe.setShortcut(_translate("MainWindow", "Alt+Del"))
        self.actionDelete.setText(_translate("MainWindow", "Delete"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Alt+X"))
        self.actionSelectGroup.setText(_translate("MainWindow", "Select  a Group..."))
        self.actionUnselectGroup.setText(_translate("MainWindow", "Unselect a Group..."))
        self.actionSelectAll.setText(_translate("MainWindow", "Select All"))
        self.actionUnselectAll.setText(_translate("MainWindow", "Unselect All"))
        self.actionInvertSelection.setText(_translate("MainWindow", "Invert Selection"))
        self.actionSelectAllWithTheSameExtension.setText(_translate("MainWindow", "Select All with the Same Extension"))
        self.actionUnselectAllWithTheSameExtension.setText(_translate("MainWindow", "Unselect All with the Same Extension"))
        self.actionSaveSelection.setText(_translate("MainWindow", "Save Selection"))
        self.actionRestoreSelection.setText(_translate("MainWindow", "Restore Selection"))
        self.actionSaveSelectionToFile.setText(_translate("MainWindow", "Save Selection to File..."))
        self.actionLoadSelectionFromFile.setText(_translate("MainWindow", "Load Selection from File..."))
        self.actionLoadSelectionFromClipboard.setText(_translate("MainWindow", "Load Selection from Clipboard"))
        self.actionCopyFilenameToClipboard.setText(_translate("MainWindow", "Copy Filename(s) to Clipboard"))
        self.actionCopyFilenameToClipboard.setShortcut(_translate("MainWindow", "Ctrl+Shift+X"))
        self.actionCopyFilenameWithFullPath.setText(_translate("MainWindow", "Copy Filename(s) with Full Path"))
        self.actionCopyFilenameWithFullPath.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
        self.actionCopyAllShownColumns.setText(_translate("MainWindow", "Copy all shown columns"))
        self.actionCompareDirectories.setText(_translate("MainWindow", "Compare Directories"))
        self.actionSearch.setText(_translate("MainWindow", "Search..."))
        self.actionSearch.setShortcut(_translate("MainWindow", "Alt+F7"))
        self.actionNewSearchInstance.setText(_translate("MainWindow", "New search instance..."))
        self.actionNewSearchInstance.setShortcut(_translate("MainWindow", "Ctrl+Shift+F7"))
        self.actionViewCurrentSearchInstances.setText(_translate("MainWindow", "View current search instances"))
        self.actionDirectoryHotlist.setText(_translate("MainWindow", "Directory Hotlist"))
        self.actionDirectoryHotlist.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionSynchronizeDirs.setText(_translate("MainWindow", "Synchronize dirs..."))
        self.actionRunTerminal.setText(_translate("MainWindow", "Run Terminal"))
        self.actionRunTerminal.setShortcut(_translate("MainWindow", "F9"))
        self.actionExecuteInternalCommand.setText(_translate("MainWindow", "Execute internal command..."))
        self.actionExecuteInternalCommand.setShortcut(_translate("MainWindow", "Shift+F12"))
        self.actionFlatView.setText(_translate("MainWindow", "Flat view"))
        self.actionFlatView.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionOpenVFSList.setText(_translate("MainWindow", "Open VFS List"))
        self.actionSwapPanels.setText(_translate("MainWindow", "Swap Panels"))
        self.actionSwapPanels.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.actionTargetSource.setText(_translate("MainWindow", "Target = Source"))
        self.actionTargetSource.setShortcut(_translate("MainWindow", "Alt+Z"))
        self.actionShowOccupiedSpace.setText(_translate("MainWindow", "Show Occupied Space"))
        self.actionShowOccupiedSpace.setShortcut(_translate("MainWindow", "Alt+Shift+Return"))
        self.actionNetworkConnect.setText(_translate("MainWindow", "Network Connect..."))
        self.actionNetworkDisconnect.setText(_translate("MainWindow", "Network Disconnect"))
        self.actionMapNetworkDrive.setText(_translate("MainWindow", "Map Network Drive..."))
        self.actionDisconnectNetworkDrive.setText(_translate("MainWindow", "Disconnect Network Drive..."))
        self.actionCopyNamesWithUNCPath.setText(_translate("MainWindow", "Copy_names_with_UNC_path"))
        self.actionNewTab.setText(_translate("MainWindow", "New Tab"))
        self.actionNewTab.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionRenameTab.setText(_translate("MainWindow", "Rename Tab"))
        self.actionOpenFolderInNewTab.setText(_translate("MainWindow", "Open Folder in a New Tab"))
        self.actionOpenFolderInNewTab.setShortcut(_translate("MainWindow", "Ctrl+Up"))
        self.actionCloseTab.setText(_translate("MainWindow", "Close Tab"))
        self.actionCloseAllTabs.setText(_translate("MainWindow", "Close All Tabs"))
        self.actionCloseDuplicateTabs.setText(_translate("MainWindow", "Close Duplicate Tabs"))
        self.actionSwitchToNextTab.setText(_translate("MainWindow", "Switch to Next Tab"))
        self.actionSwitchToNextTab.setShortcut(_translate("MainWindow", "Ctrl+Tab"))
        self.actionSwitchToPreviousTab.setText(_translate("MainWindow", "Switch to Previous Tab"))
        self.actionSwitchToPreviousTab.setShortcut(_translate("MainWindow", "Ctrl+Shift+Tab"))
        self.actionSaveTabsToFile.setText(_translate("MainWindow", "Save Tabs to File"))
        self.actionLoadTabsFromFile.setText(_translate("MainWindow", "Load Tabs from File"))
        self.actionSaveCurrentTabsToNewFavoriteTabs.setText(_translate("MainWindow", "Save current tabs to a New FavoriteTabs"))
        self.actionLoadTabsFromFavoriteTabs.setText(_translate("MainWindow", "Load tabs from Favorite Tabs"))
        self.actionConfigurationOfFolderTabs.setText(_translate("MainWindow", "Configuration of folder tabs"))
        self.actionConfigurationOfFavoriteTabs.setText(_translate("MainWindow", "Configuration of Favorite Tabs"))
        self.actionNormal.setText(_translate("MainWindow", "Normal"))
        self.actionLocked.setText(_translate("MainWindow", "Locked"))
        self.actionLockedWithDirectoryChangesAllowed.setText(_translate("MainWindow", "Locked with Directory Changes Allowed"))
        self.actionLockedWithDirectoriesOpenedInNewTabs.setText(_translate("MainWindow", "Locked with Directories Opened in New Tabs"))
        self.actionSetAllTabsToNormal.setText(_translate("MainWindow", "Set all tabs to Normal"))
        self.actionSetAllTabsToLocked.setText(_translate("MainWindow", "Set all tabs to Locked"))
        self.actionAllTabsLockedWithDirChangesAllowed.setText(_translate("MainWindow", "All tabs Locked with Dir Changes Allowed"))
        self.actionAllTabsLockedWithDirOpenedInNewTabs.setText(_translate("MainWindow", "Alltabs Locked with Dir Opened in New Tabs"))
        self.actionSaveCurrentTabsToNewFavoriteTabs2.setText(_translate("MainWindow", "Save current tabs to a New Favorite Tabs"))
        self.actionResaveOnTheLastFavoriteTabsLoaded.setText(_translate("MainWindow", "Resave on the last Favorite Tabs loaded"))
        self.actionRelopadTheLastFavoriteTabsLoaded.setText(_translate("MainWindow", "Relopad the last Favorite Tabs loaded"))
        self.actionConfigurationOfFavoriteTabs2.setText(_translate("MainWindow", "Configuration of Favorite Tabs"))
        self.actionBriefView.setText(_translate("MainWindow", "Brief view"))
        self.actionBriefView.setShortcut(_translate("MainWindow", "Ctrl+F1"))
        self.actionFull.setText(_translate("MainWindow", "Full"))
        self.actionFull.setShortcut(_translate("MainWindow", "Ctrl+F2"))
        self.actionThumbnails.setText(_translate("MainWindow", "Thumbnails"))
        self.actionThumbnails.setShortcut(_translate("MainWindow", "Ctrl+Shift+F1"))
        self.actionQuickViewPanel.setText(_translate("MainWindow", "Quick View Panel"))
        self.actionQuickViewPanel.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionTreeViewPanel.setText(_translate("MainWindow", "Tree View Panel"))
        self.actionTreeViewPanel.setShortcut(_translate("MainWindow", "Ctrl+Shift+F8"))
        self.actionSortByName.setText(_translate("MainWindow", "Sort by Name"))
        self.actionSortByName.setShortcut(_translate("MainWindow", "Ctrl+F3"))
        self.actionSortByExtension.setText(_translate("MainWindow", "Sort by Extension"))
        self.actionSortByExtension.setShortcut(_translate("MainWindow", "Ctrl+F4"))
        self.actionSortBySize.setText(_translate("MainWindow", "Sort by Size"))
        self.actionSortBySize.setShortcut(_translate("MainWindow", "Ctrl+F6"))
        self.actionSortByDate.setText(_translate("MainWindow", "Sort by Date"))
        self.actionSortByDate.setShortcut(_translate("MainWindow", "Ctrl+F5"))
        self.actionSortByAttributes.setText(_translate("MainWindow", "Sort by Attributes"))
        self.actionReverseOrder.setText(_translate("MainWindow", "Reverse Order"))
        self.actionRefresh.setText(_translate("MainWindow", "Refresh"))
        self.actionRefresh.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionShowHiddenSystemFiles.setText(_translate("MainWindow", "Show Hidden/System Files"))
        self.actionShowHiddenSystemFiles.setShortcut(_translate("MainWindow", "Ctrl+."))
        self.actionHorizontalPanelsMode.setText(_translate("MainWindow", "Horizontal Panels Mode"))
        self.actionHorizontalPanelsMode.setShortcut(_translate("MainWindow", "Ctrl+Shift+H"))
        self.actionOperationsViewer.setText(_translate("MainWindow", "Operations Viewer"))
        self.actionOperationsViewer.setShortcut(_translate("MainWindow", "Alt+V"))
        self.actionSave_current_tabs_to_a_New_Favorite_Tabs_2.setText(_translate("MainWindow", "Save current tabs to a New Favorite Tabs"))
        self.actionResave_on_the_last_Favorite_Tabs_loaded_2.setText(_translate("MainWindow", "Resave on the last Favorite Tabs loaded"))
        self.actionReload_the_last_Favorite_Tabs_loaded.setText(_translate("MainWindow", "Reload the last Favorite Tabs loaded"))
        self.actionConfiguration_of_Favorite_Tabs_3.setText(_translate("MainWindow", "Configuration of Favorite Tabs"))
        self.actionOptions.setText(_translate("MainWindow", "Options..."))
        self.actionConfigurationOfDirectoryHotlist.setText(_translate("MainWindow", "Configuration of Directory Hotlist"))
        self.actionConfigurationOfDirectoryHotlist.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
        self.actionConfigurationOfFavoriteTabs4.setText(_translate("MainWindow", "Configuration of Favorite Tabs"))
        self.actionConfigurationOfFileAssociations.setText(_translate("MainWindow", "Configuration of File Associations"))
        self.actionConfigurationOfFolderTabs2.setText(_translate("MainWindow", "Configuration of folder tabs"))
        self.actionConfigurationOfArchivers.setText(_translate("MainWindow", "Configuration of Archivers"))
        self.actionSavePosition.setText(_translate("MainWindow", "Save Position"))
        self.actionSaveSettings.setText(_translate("MainWindow", "Save Settings"))
        self.actionKeyboard.setText(_translate("MainWindow", "Keyboard"))
        self.actionVisitDoubleCommanderWebsite.setText(_translate("MainWindow", "Visit Double Commander Website"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionAbout.setShortcut(_translate("MainWindow", "F1"))
        self.actionTBRefresh.setText(_translate("MainWindow", "Refresh"))
        self.actionTBRefresh.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionTBRunTerminal.setText(_translate("MainWindow", "Run Terminal"))
        self.actionTBRunTerminal.setShortcut(_translate("MainWindow", "F9"))
        self.actionTBOptions.setText(_translate("MainWindow", "Options..."))
        self.actionTBBriefView.setText(_translate("MainWindow", "Brief view"))
        self.actionTBBriefView.setShortcut(_translate("MainWindow", "Ctrl+F1"))
        self.actionTBColumnsView.setText(_translate("MainWindow", "Columns View"))
        self.actionTBColumnsView.setToolTip(_translate("MainWindow", "Columns view"))
        self.actionTBColumnsView.setShortcut(_translate("MainWindow", "Ctrl+F2"))
        self.actionTBThumbnails.setText(_translate("MainWindow", "Thumbnails"))
        self.actionTBThumbnails.setShortcut(_translate("MainWindow", "Ctrl+Shift+F1"))
        self.actionTBFlatView.setText(_translate("MainWindow", "Flat view"))
        self.actionTBFlatView.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionTBGotoPreviousEntryInHistory.setText(_translate("MainWindow", "Go to previous entry in history"))
        self.actionTBGotoPreviousEntryInHistory.setToolTip(_translate("MainWindow", "Go to previous entry in history (Alt+Left)"))
        self.actionTBGotoPreviousEntryInHistory.setShortcut(_translate("MainWindow", "Alt+Left"))
        self.actionTBGotoPreviousEntryInHistory2.setText(_translate("MainWindow", "Go to next entry in history"))
        self.actionTBGotoPreviousEntryInHistory2.setToolTip(_translate("MainWindow", "Go to next entry in history (Alt+Right)"))
        self.actionTBGotoPreviousEntryInHistory2.setShortcut(_translate("MainWindow", "Alt+Right"))
        self.actionTBSelectGroup.setText(_translate("MainWindow", "Select  a Group..."))
        self.actionTBUnselectGroup.setText(_translate("MainWindow", "Unselect  a Group..."))
        self.actionTBUnselectGroup.setToolTip(_translate("MainWindow", "Unselect  a Group"))
        self.actionTBInvertSelection.setText(_translate("MainWindow", "Unelect  a Group..."))
        self.actionTBInvertSelection.setToolTip(_translate("MainWindow", "Invert Selection"))
        self.actionTBPackFiles.setText(_translate("MainWindow", "Pack Files..."))
        self.actionTBPackFiles.setToolTip(_translate("MainWindow", "Pack Files... (Alt+F5)"))
        self.actionTBPackFiles.setShortcut(_translate("MainWindow", "Alt+F5"))
        self.actionTBExtractFiles.setText(_translate("MainWindow", "Extract Files..."))
        self.actionTBExtractFiles.setToolTip(_translate("MainWindow", "Extract Files (Alt+F9)"))
        self.actionTBExtractFiles.setShortcut(_translate("MainWindow", "Alt+F9"))
        self.actionTBSearch.setText(_translate("MainWindow", "Search..."))
        self.actionTBSearch.setToolTip(_translate("MainWindow", "Search... (Alt+F7)"))
        self.actionTBSearch.setShortcut(_translate("MainWindow", "Alt+F7"))
        self.actionTBMultiRenameTool.setText(_translate("MainWindow", "Multi-Rename Tool"))
        self.actionTBMultiRenameTool.setToolTip(_translate("MainWindow", "Multi-Rename Tool (Ctrl+M)"))
        self.actionTBMultiRenameTool.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.actionTBSynchronizeDirs.setText(_translate("MainWindow", "Synchronize dirs..."))
        self.actionTBSynchronizeDirs.setToolTip(_translate("MainWindow", "Synchronize dirs..."))
        self.actionTBCopyFilenameWithFullPath.setText(_translate("MainWindow", "Copy Filename(s) with Full Path"))
        self.actionTBCopyFilenameWithFullPath.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
